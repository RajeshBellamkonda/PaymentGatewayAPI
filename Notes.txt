- Payment Gateway API
 - Payment Endpoint
	- Get
		- Get by PaymentId, - Shows Masked Card Number, Card details along with Status code
	- Post - 200 / 400 / ...
		- Card Number, Expiry Month / year, Amount, Currency and CVV
		
		Bank : Process payment - (PaymentId)returns unique Id (GUID), Status(200/ error)
		
		
		- Swagger, TODOs, etc. - 
		
		
		Logging,
		Metrics, - Promethius (https://devblogs.microsoft.com/aspnet/observability-asp-net-core-apps/)
		Docker file,
		Authentication,
		API Client for Merchant,
		gitLab CI,
		Performance Testing
		Encryption - Card encryption,
		Data Storage,
		Suggestion : 
		This is by no means a prod ready code but just a POC demonstrating the knowledge.
		Payments Service can be made Event Driven to process payments offline...Gives scalability
		Logging -  we can extend the logging to have traceIds etc to track through the system.
		Validation - More detailed validation on the PaymentRequestVm
		
		https://github.com/IdentityServer/IdentityServer4/blob/main/samples/Quickstarts/1_ClientCredentials/src/Client/Program.cs
		https://localhost:5001/.well-known/openid-configuration
		https://nblumhardt.com/2019/10/serilog-in-aspnetcore-3/
		
		
		